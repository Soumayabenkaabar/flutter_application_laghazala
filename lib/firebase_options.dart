// File generated by FlutterFire CLI.
// Ce fichier a été généré par FlutterFire CLI.


// Importation des dépendances nécessaires
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;


// Définition de la classe DefaultFirebaseOptions
class DefaultFirebaseOptions {
  // Méthode statique pour obtenir les options de Firebase pour la plateforme actuelle
  static FirebaseOptions get currentPlatform {
    // Vérification si l'application est exécutée sur le web
    if (kIsWeb) {
      // Si c'est le cas, une erreur est levée car les options par défaut pour le web ne sont pas configurées
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    // Sinon, selon la plateforme de destination par défaut
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        // Si la plateforme est Android, retourner les options pour Android
        return android;
      case TargetPlatform.iOS:
        // Si la plateforme est iOS, retourner les options pour iOS
        return ios;
      case TargetPlatform.macOS:
        // Si la plateforme est macOS, retourner les options pour macOS
        return macos;
      case TargetPlatform.windows:
        // Si la plateforme est Windows, une erreur est levée car les options par défaut pour Windows ne sont pas configurées
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        // Si la plateforme est Linux, une erreur est levée car les options par défaut pour Linux ne sont pas configurées
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        // Si la plateforme n'est pas supportée, une erreur est levée
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // Options par défaut pour Android
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAzU3FIUVww-teM4apoWgP_ZBudxU3Txw4',
    appId: '1:620512232749:android:e55447223d47e3d709ffa4',
    messagingSenderId: '620512232749',
    projectId: 'bdlaghazala',
    storageBucket: 'bdlaghazala.appspot.com',
  );

  // Options par défaut pour iOS
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyBgBROM_XIfvknDKjqa_dLhfuFnFZxVVrk',
    appId: '1:620512232749:ios:fa0a7e082efe7b6309ffa4',
    messagingSenderId: '620512232749',
    projectId: 'bdlaghazala',
    storageBucket: 'bdlaghazala.appspot.com',
    iosBundleId: 'com.example.flutterApplicationLaghazala',
  );

  // Options par défaut pour macOS
  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyBgBROM_XIfvknDKjqa_dLhfuFnFZxVVrk',
    appId: '1:620512232749:ios:1d4caf8d2a684dbb09ffa4',
    messagingSenderId: '620512232749',
    projectId: 'bdlaghazala',
    storageBucket: 'bdlaghazala.appspot.com',
    iosBundleId: 'com.example.flutterApplicationLaghazala.RunnerTests',
  );
}
